{"version":3,"sources":["Orbit.js","Floor.js","Bulb.js","Background.js","State.js","ColorSelector.js","Dragable.js","Model.js","BoundingBox.js","Cars.js","CameraControls.js","CameraButtons.js","Lights.js","Effects.js","App.js","reportWebVitals.js","index.js"],"names":["extend","OrbitControls","Orbit","useThree","camera","domElement","gl","controls","useRef","useFrame","current","update","ref","args","attach","Floor","props","useBox","console","log","receiveShadow","transparent","opacity","color","Bulb","scene","sunRef","lights","useEffect","push","castShadow","intensity","emissive","Background","skybox","useLoader","THREE","process","useMemo","encoding","mapping","object","state","cameraPos","targetPos","shouldFocus","activeMesh","activeMeshName","ColorSelector","handleClick","e","material","target","style","background","position","zIndex","left","right","margin","width","display","top","height","onClick","DragControls","Dragable","groupRef","controlsRef","useState","children","setChildren","addEventListener","orbitControls","enabled","api","mass","set","copy","velocity","transformGroup","Model","mixer","gltf","GLTFLoader","path","animations","length","forEach","clip","clipAction","play","delta","traverse","child","isMesh","side","scale","BoundingBox","offset","size","visible","wireframe","Cars","fallback","Array","fill","rotation","Math","PI","CameraControls","vec","vec1","lerp","diff","clone","sub","getObjectByName","reset","sets_vector","pair_one","pair_two","normalize","justifyContent","alignItems","bottom","backgroundColor","borderRadius","fontSize","fontWeight","border","cursor","CameraButtons","sets","name","num","className","Lights","Effects","setLights","focusDistance","focalLength","bokehScale","map","light","index","sun","uuid","App","shadows","powerPreference","antialias","stencil","depth","arg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02fe9d5d.chunk.js","sourcesContent":["\r\nimport React, {useRef} from 'react';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { useFrame, useThree, extend} from '@react-three/fiber';\r\n\r\nextend({OrbitControls})\r\n\r\nconst Orbit = () =>{\r\n\r\n    \r\n  \r\n    const {camera, gl:{domElement}} = useThree();// this is how you reference the canvas n camera components \r\n    const controls = useRef()\r\n  \r\n    useFrame(()=>{\r\n     controls.current.update() // you want to speak to the method of the orbit controls so you use the reference provided by the useRef()\r\n    });\r\n  \r\n    return (\r\n      <orbitControls \r\n      ref={controls} \r\n      args={[camera, domElement]}\r\n      attach='orbitControls' /*this creates a cleaner way to see the enabled property in the console under the scene object*/\r\n      />\r\n    )\r\n  }\r\n\r\n  export default Orbit;\r\n","\r\nimport './App.css';\r\nimport React, {useRef, Suspense, useState } from 'react';\r\nimport {Canvas, useFrame, useThree, extend, useLoader} from '@react-three/fiber';\r\nimport * as THREE from \"three\";\r\nimport {TextureLoader} from 'three/src/loaders/TextureLoader'\r\n//import { DirectionalLightHelper } from \"thre\r\nimport { useBox} from '@react-three/cannon'\r\n//import {useHelper} from \"@react-three/drei\";\r\n\r\nconst Floor = (/*{position}*/props)=>{\r\n    const [ref,api] = useBox(()=>({args:[20,1,10],...props}))// by default the floor is 1x1x1 so you have to give it dimensions with an args property \r\n\r\n    console.log(\"floor is here\")\r\n    return (\r\n      <mesh {...props} ref={ref} receiveShadow/*={props.receiveShadow}*/>\r\n      <boxBufferGeometry args={[20,1,10]} />{/*Don't forget the s on arg*/}\r\n      <meshPhysicalMaterial transparent opacity={0.05} color=\"white\"/>\r\n      </mesh>\r\n      \r\n    )\r\n  }\r\n\r\n  export default Floor;","import './App.css';\r\nimport React, {useRef, Suspense, useState, useEffect } from 'react';\r\nimport {Canvas, useFrame, useThree, extend, useLoader} from '@react-three/fiber';\r\nimport * as THREE from \"three\";\r\nimport {TextureLoader} from 'three/src/loaders/TextureLoader'\r\n//import { DirectionalLightHelper } from \"three\";\r\n//import {useHelper} from \"@react-three/drei\";\r\n\r\n\r\nconst Bulb = (props/*{position}*/)=>{\r\n    console.log(\"floor is here\")\r\n    /*const poinLightRef = useRef()\r\n    useHelper(poinLightRef, CameraHelper, \"blue\")*/\r\n    \r\n    const {scene} = useThree()\r\n\r\n    const sunRef = useRef()\r\n\r\n    console.log(scene.lights)\r\n\r\n    useEffect(()=>{\r\n    if(scene.lights) scene.lights.push(sunRef)\r\n    else scene.lights = [sunRef]\r\n    \r\n    },[])\r\n    \r\n      /***My own testing */\r\n      /*\r\n      scene.lights = []\r\n      scene.lights.push(sunRef) // told to set at this point\r\n      */\r\n  \r\n\r\n\r\n\r\n    return (\r\n      <>\r\n      {/*<SphereGeometry/>\r\n      <meshBasicMaterial color=\"blue\"/>\r\n      You forgot to wrap these in a mesh*/}\r\n      <mesh {...props} ref={sunRef}>\r\n      <pointLight /*ref={poinLightRef}*/  castShadow/*={props.castShadow}*/ intensity={5} \r\n                  shadow-mapSize-height={2**10}\r\n                  shadow-mapSize-width={2**10}\r\n                  shadow-radius={10}/>{/**/}/{/*You don't need to give this a position it is nested in the mesh component(the parent). The position of the parent takes precedence. The child will change accordingly */ }\r\n        <sphereBufferGeometry args={[0.2,20,20]}/>\r\n        <meshPhongMaterial emissive=\"yellow\"/>{/*ALWAYS CHECK SPELLING : CAP etc*/}\r\n      </mesh>\r\n      </>\r\n      \r\n    )\r\n  }\r\n  \r\n\r\n  export default Bulb;","import './App.css';\r\nimport React, {useRef, Suspense, useState, useMemo } from 'react';\r\nimport {Canvas, useFrame, useThree, extend, useLoader} from '@react-three/fiber';\r\nimport * as THREE from \"three\";\r\nimport {TextureLoader} from 'three/src/loaders/TextureLoader'\r\n//import { DirectionalLightHelper } from \"three\";\r\n//import {useHelper} from \"@react-three/drei\";\r\n\r\n\r\nconst Background = ()=>{\r\n    const skybox = useLoader(THREE.TextureLoader,\r\n      process.env.PUBLIC_URL + '/autoshop.jpg')/*/sky.jpg*/\r\n    \r\n    const {gl} = useThree()\r\n    \r\n    /****formats the background image so that it doesn't look like 360 videos on youtube***/\r\n    /*const formatted = new Three.WebGLCubeRenderTarget(\r\n      skybox.image.height\r\n    ).fromEquirectangularTexture(gl, skybox)*/\r\n    //this method is so that you can get the texture \r\n    \r\n    /***Alternative to the above */\r\n\r\n    useMemo(()=>{\r\n      skybox.encoding = THREE.sRGBEncoding;\r\n      skybox.mapping = THREE.EquirectangularReflectionMapping;\r\n    },[])\r\n    \r\n    \r\n    return (\r\n      <primitive /*attach=\"background\" attach binds to parent*/ \r\n      attach=\"background\"\r\n      object={skybox}/*was skybox before formatting*//> // primitive is for existing objects such as models and imgs\r\n    )\r\n    \r\n    }\r\n\r\n    export default Background;","import * as THREE from \"three\";\r\n\r\n\r\nconst state ={\r\n    /****THREE was imported because you need vectors and THREE happens to have vector objects that you can use\r\n    cameraPos:new THREE.Vector3(6,3,5),\r\n    targetPos:new THREE.Vector3(-6,3,5) */\r\n    \r\n    /****Alternately(Cleaner) you can convert the array value vector3 using \"set\" and \"spread\" the array values to match the parameters in the CameraControls file**/\r\n    cameraPos:[6,3,5],\r\n    targetPos:[-6,3,5],/* this is to change the origin of the camera vector*/\r\n    \r\n    shouldFocus:false,\r\n    activeMesh:{},//made up\r\n    activeMeshName:\"\"\r\n}\r\n\r\nexport default state;","import './App.css';\r\nimport React, {useRef, Suspense, useState } from 'react';\r\nimport {Canvas, useFrame, useThree, extend, useLoader} from '@react-three/fiber';\r\nimport * as THREE from \"three\";\r\nimport {TextureLoader} from 'three/src/loaders/TextureLoader'\r\n//import { DirectionalLightHelper } from \"three\";\r\n//import {useHelper} from \"@react-three/drei\";\r\nimport state from \"./State\";\r\n\r\n\r\n\r\nconst ColorSelector = ()=>{\r\n\r\n    const handleClick = (e)=>{\r\n        //if(!state.activeMesh) return;\r\n\r\n        console.log(state.activeMesh)\r\n        state.activeMesh.material.color = new THREE.Color(e.target.style.background) //you cannot change the color as you would in a mesh so it has to be done using a constructor\r\n    }\r\n\r\n    return(\r\n\r\n        <div style={{position: 'absolute', \r\n                     zIndex: 1, \r\n                     left:0,\r\n                     right:0,\r\n                     margin:'auto',\r\n                     width: 'fit-context',\r\n                     display:'flex',\r\n                     top:'20px'}}>\r\n\r\n      \r\n        <div style={{background:\"blue\",\r\n                     height: 50,\r\n                     width: 50\r\n                    }}\r\n         onClick={handleClick}></div>\r\n        <div style={{background:\"yellow\",\r\n                     height: 50,\r\n                     width: 50\r\n                    }}\r\n         onClick={handleClick}></div>\r\n        <div style={{background:\"white\",\r\n                     height: 50,\r\n                     width: 50\r\n                    }}\r\n         onClick={handleClick}></div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ColorSelector;","import {DragControls} from 'three/examples/jsm/controls/DragControls';\r\nimport {extend,useThree} from '@react-three/fiber';\r\nimport React, {useRef, useState, useEffect } from 'react';\r\nextend({DragControls});//this start with a common in r3f\r\n\r\n\r\nconst Dragable = (props)=>{\r\n    /***2nd Step - Get the camera and renderer from useThree */\r\n    const groupRef = useRef()\r\n    const controlsRef = useRef()\r\n    const [children, setChildren] = useState([])\r\n    const {gl,camera,scene} = useThree() // scene was imported[pulled] because you can find the orbitcontrol property there\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log(groupRef.current)\r\n        setChildren(groupRef.current.children) // everytime there is a render this will capture all of the children components that are present at the time\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        controlsRef.current.addEventListener(\"hoveron\", (e)=>{\r\n            console.log(scene)\r\n            scene.orbitControls.enabled = false\r\n        })// the addEventListener can be found in the parents classes' documentation on threejs\r\n\r\n        controlsRef.current.addEventListener(\"hoveroff\", (e)=>{\r\n            console.log(scene)\r\n            scene.orbitControls.enabled = true\r\n        })\r\n\r\n        controlsRef.current.addEventListener(\"dragstart\", (e)=>{\r\n        \r\n            e.object.api?.mass.set(0)\r\n        })\r\n\r\n        controlsRef.current.addEventListener(\"dragend\", (e)=>{\r\n        \r\n            e.object.api?.mass.set(1)\r\n        })\r\n\r\n\r\n        controlsRef.current.addEventListener(\"drag\", (e)=>{\r\n            \r\n            console.log(e.object)// your familiar with e.object from previous projects. It is common when reading the properties of an element when an event has occured on it\r\n            //You will also notice that the api that you added to the box as an attribute can now be found through e.object\r\n\r\n            e.object.api?.position.copy(e.object.position)// copy takes an object with x,y,z properties\r\n            e.object.api?.velocity.set(0,0,0)// set takes commas seperated values of x,y,z\r\n        })\r\n    \r\n    \r\n    },[children])// another useEffect was used to only be called when the children have changed\r\n\r\n    return (\r\n\r\n\r\n        <group ref={groupRef}> {/* Just a placeholder parent container*/}\r\n\r\n        {/***1st step*/}\r\n        {/*The has a camera and render properties in the constructor as specified by the three.js docs*/}\r\n        <dragControls \r\n        transformGroup\r\n        ref={controlsRef}\r\n        args={[children, camera, gl.domElement]}\r\n        />{/*the object here starts with a capital even though it is a capital in threejs docs in r3f use common initial letter*/}\r\n        {props.children}{/*This is like foreshadowing and putting in place the infrasture to work with the child elements when they come. I guess like a mother setting up a baby room. And as you can see this infrastructure comes from the ref attribute*/}\r\n        </group>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Dragable;","import { useLoader, useFrame } from '@react-three/fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport * as THREE from \"three\";\r\n\r\n\r\n\r\nconst Model = props=>{\r\n\r\nconst gltf = useLoader(\r\n    GLTFLoader, \r\n    process.env.PUBLIC_URL + props.path\r\n    ) // you are not using textures so do use a texture loader\r\n\r\nconsole.log(gltf)\r\n\r\nlet mixer\r\n\r\nif(gltf.animations.length>0){\r\n    mixer = new THREE.AnimationMixer(gltf.scene)\r\n\r\n    gltf.animations.forEach(clip=>{\r\n\r\n        //const action = mixer.clipAction(clip).play()\r\n        const action = mixer.clipAction(clip)\r\n        action.play()\r\n        \r\n\r\n}) \r\n}\r\n\r\nuseFrame((state, delta) => {\r\n    mixer?.update(delta)\r\n})\r\n\r\ngltf.scene.traverse(child=>{\r\n    //console.log(child.isMesh)\r\n    if(child.isMesh){\r\n    console.log(child)\r\n    child.castShadow = true\r\n    child.receiveShadow = true \r\n    child.material.side = THREE.FrontSide// removes weird pattern\r\n    }\r\n    \r\n})\r\n\r\nreturn(\r\n    <primitive \r\n    object={gltf.scene}//this is how we add the model scene that you found on the gltf object via console.log\r\n    scale={props.scale}\r\n    /> \r\n)\r\n\r\n}\r\n\r\nexport default Model;","import {useBox} from '@react-three/cannon'\r\n\r\n\r\n\r\n\r\nconst BoundingBox = ({children , offset =[0,0,0], position =[0,0,0], size=[1,1,1], visible=false}) =>{\r\n\r\n\r\n\r\n    const [ref, api] = useBox(()=>({mass:1, args:size, position}))\r\n\r\n    return(\r\n        <group ref={ref} api={api} >\r\n            <mesh /*position={position} you don't need to set position here if you have it in the hook already*/ scale={size} visible={visible}>\r\n            <boxBufferGeometry />\r\n            <meshPhysicalMaterial wireframe /*If you know how classes work you will recognize that you can find additional properties -attribute for r3f components - like wireframe from the parent class that the(this) child class extends*/ />\r\n            </mesh>\r\n            <group position={offset}>\r\n                {children} \r\n            </group>\r\n        </group>\r\n\r\n    )\r\n}\r\n\r\nexport default BoundingBox;","\r\nimport React, {useRef, Suspense, useState } from 'react';\r\nimport Dragable from \"./Dragable\"\r\nimport BoundingBox from \"./BoundingBox\"\r\nimport Model from \"./Model\"\r\n\r\nconst Cars = ()=>{\r\n\r\n    return(\r\n        <>\r\n          <Suspense /*What this does is that it waits for async to happen before rendering the component*/\r\n                  fallback={null} /*You need a fallback and you have set the fall back to something*/\r\n                >\r\n            <Dragable >\r\n              <BoundingBox offset={[0,-0.4,0.8]} position={[4,2,0]} size={[3,2,6]} /*visible*/>\r\n                  \r\n                  {/*****This can be placed in the box*******/}\r\n                  {/*scale={active?1.5:1}\r\n                    onClick={() => setActive(!active)}\r\n                    onPointerUp={onPointerUpHandler}*/}\r\n\r\n                  {/*<Box position={[-4, 1, 0]}/>\r\n                  <Box position={[4, 1, 0]}/>\r\n                  */}\r\n                  <Model \r\n                    path='/tesla_model_3/scene.gltf'/*Remember we are dealing with folders here so you have to use slashes at the beginning and slashes for sub folders */\r\n                    scale={new Array(3).fill(0.01)} // or you could have done this [0.01,0.01,0.01]\r\n                  \r\n                  />\r\n\r\n              </BoundingBox>\r\n            </Dragable>\r\n          \r\n          \r\n          <Dragable>\r\n            <BoundingBox offset={[0,-0.8,0.2]} position={[-4,2,0]} size={[3,2,7]}>\r\n              \r\n                <Model \r\n                  path='/tesla_model_s/scene.gltf'/*Remember we are dealing with folders here so you have to use slashes at the beginning and slashes for sub folders */\r\n                  scale={new Array(3).fill(0.013)} // or you could have done this [0.01,0.01,0.01]\r\n                  \r\n                  />\r\n                \r\n             \r\n            </BoundingBox> \r\n            <group rotation={[0,Math.PI,0]} position={[0,0.0005,0]}>\r\n              <Model path='mech_drone/scene.gltf'\r\n              scale={new Array(3).fill(7)}\r\n              \r\n             />\r\n            </group>\r\n             \r\n          </Dragable>\r\n          </Suspense>\r\n          \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cars;","import * as THREE from \"three\";\r\nimport {useFrame} from '@react-three/fiber';\r\nimport state from \"./State\";\r\n\r\nconst CameraControls = ({})=>{\r\n\r\n    const vec = new THREE.Vector3();\r\n   \r\n    const vec1 = new THREE.Vector3();\r\n    /*const scene1 = new THREE.Scene();\r\n\r\n    const origin = [0,0,0]\r\n\r\n    const cameraVec_arrowHelper = new THREE.ArrowHelper(vec.set(...state.cameraPos))\r\n\r\n    scene1.add(cameraVec_arrowHelper, ...origin, 1, 0xffff00)*/\r\n\r\n    useFrame(({camera,scene})=>{\r\n        //extract the camera by destructuring the parameter passed to the callback of the useFrame. Its similar to destructing useThree but w/o the hook\r\n\r\n        //console.log(camera)\r\n\r\n        if(state.shouldFocus){\r\n            \r\n            camera.position.lerp(vec.set(...state.cameraPos), 0.1)\r\n            //position is a vector3 so you can find further function for position by using vector3 class ie lerp\r\n\r\n            scene.orbitControls.update()// not needed as I have a different result from the tuturial the camera seems to operate as intended on my part\r\n\r\n            //scene.orbitControls.target = vec.set(...state.targetPos)\r\n            /****just as set and get operate on OOP you can give target a value by chaining set onto it as seen below*/\r\n           // scene.orbitControls.target.set(...state.targetPos)\r\n\r\n\r\n           \r\n           \r\n            scene.orbitControls.target.lerp(vec1.set(...state.targetPos), 0.1) //You want it to move from the current target pos to the new one. Your not setting the target position directly from target property\r\n           \r\n            //console.log(scene)\r\n\r\n            const diff = camera.position.clone().sub(vec.set(...state.cameraPos)).length()\r\n\r\n            state.activeMesh = scene.getObjectByName(state.activeMeshName)\r\n\r\n            console.log(state.activeMesh)\r\n\r\n            if(diff<0.1){\r\n                state.shouldFocus = false\r\n                //scene.orbitControls.target = vec.set(0,0,0)\r\n                console.log(scene)\r\n                console.log(state.shouldFocus)\r\n\r\n                const diff2 = camera.position.clone().sub(vec.set(...state.cameraPos)).length()\r\n\r\n                if(diff2>0.1){\r\n                    //scene.orbitControls.target = vec.set(0,0,0)//\r\n                    scene.orbitControls.target.reset()\r\n                    //scene.orbitControls.target.lerp(scene.orbitControls.reset().target, 0.1)\r\n                    scene.orbitControls.update()\r\n                }\r\n            }/**/\r\n\r\n            /*if(camera.position ==state.cameraPos){\r\n                state.shouldFocus = false\r\n               console.log(state.shouldFocus) //\r\n            }*/\r\n            \r\n        }\r\n        /*if(state.shouldFocus==false){\r\n                //scene.orbitControls.target = vec.set(0,0,0)//\r\n                scene.orbitControls.target.lerp(vec.set(0,0,0), 0.1)\r\n            }*/\r\n\r\n    })\r\n\r\n    const sets_vector ={\r\n        pair_one:{\r\n            cameraPos: new THREE.Vector3(2,3,5),\r\n            targetPos: new THREE.Vector3(4,0,0)\r\n        },\r\n        pair_two:{\r\n            cameraPos: new THREE.Vector3(2,3,5),/*Don't be mistaken, the origin this will use will be different from that of CameraControls's sets object*/\r\n            targetPos: new THREE.Vector3(-4,0,0)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        //null /*You are not returning anything with this  component. It is unlike functions that don't need a return*/\r\n        <>\r\n        <arrowHelper args={[sets_vector.pair_one.cameraPos.normalize(), sets_vector.pair_one.targetPos,4,0xffff00,0.5]}/>{/*did the arrow helper here and not in camerabuttons because camera buttons doesn't return in the canvas*/}\r\n        {/*the arrow helper requires a unit vector (vector with magnitude of 1) as a parameter. That means using a vector with ones and zeros as cordinates or converting your existing vector to a unit vector with a handy function called normalize(). The orgin as a vector is strange you would expect a point but what they did was use the tip of the vector which acts as a point */}\r\n        <arrowHelper args={[sets_vector.pair_two.cameraPos.normalize(), sets_vector.pair_two.targetPos,4,0xffff00,0.5]}/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CameraControls\r\n                     \r\n\r\n\r\n","//import './App.css';\r\nimport state from './State';\r\nimport * as THREE from \"three\";\r\n\r\n\r\n\r\n\r\nconst style = {\r\n        zIndex: 1,\r\n        position: 'absolute',\r\n        \r\n        /****Not needed */\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        /** */\r\n\r\n        bottom: '5vh',/* vh& vw is for the entire screen size*/\r\n        height: '40px',\r\n        width: '40px',\r\n        backgroundColor: 'rgb(30, 75, 93)',\r\n        color: 'black',\r\n        borderRadius: '50%',/*remember this is who you set the border radius*/\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        border: '1px solid black',\r\n        cursor: 'pointer'\r\n    }\r\n\r\nconst CameraButtons = ()=>{\r\n\r\n    \r\n    \r\n    const sets ={\r\n        1:{\r\n            cameraPos: [6,3,5],\r\n            targetPos: [4,0,0],\r\n            name:\"Capot001_CAR_PAINT_0\"\r\n        },\r\n        2:{\r\n            cameraPos: [-2,3,5], \r\n            targetPos: [-4,0,0],\r\n            name:\"object005_bod_0\"\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const vec = new THREE.Vector3()\r\n\r\n    //const obj = new THREE.Object3D()\r\n\r\n    const handleClick = num=>{\r\n\r\n        \r\n        //state.cameraPos.set(...sets[num].cameraPos) use this if you have cameraPos property is a vector\r\n        state.cameraPos = sets[num].cameraPos\r\n        console.log(state.cameraPos)\r\n        //state.targetPos.set(...sets[num].targetPos)\r\n\r\n        state.targetPos= sets[num].targetPos //dymically change the key with square\r\n        console.log(state.targetPos)\r\n        state.shouldFocus =true\r\n\r\n        console.log(sets[num].name)\r\n\r\n        state.activeMeshName = sets[num].name\r\n\r\n        //state.activeMesh = obj.getObjectByName(sets[num].name)\r\n\r\n        //console.log(obj.getObjectByName(sets[num].name))\r\n    }/**/\r\n\r\nreturn (\r\n    \r\n    <>\r\n    \r\n    <div className=\"btnparent_container\">\r\n        <div className=\"btnparent\">\r\n            {/*Remember that you have to write css differently in react than you would in css */}\r\n            <button className=\"cameraBtn_LHS\" style={{left: '40vw',...style}}/*You cna add spreads in objects too rmbr*/ \r\n            onClick={e=>handleClick(2)}\r\n            >\r\n                {\"<\"}{/*escape curly braces */}\r\n            </button>\r\n\r\n            <button className=\"cameraBtn_RHS\" style={{right: '40vw',...style}} \r\n            \r\n            onClick={e=>handleClick(1)}/**/\r\n            \r\n            >\r\n                {\">\"}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    </>\r\n)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default CameraButtons","\r\nimport Bulb from \"./Bulb\"\r\n\r\n\r\nconst Lights =({})=>{\r\n\r\nreturn (\r\n<>\r\n    <ambientLight intensity={0.2} />\r\n        {/*<cameraHelper /*args={}/>*/}\r\n        {/*<fog attach=\"fog\" args={[\"white\",1,10]}/>*/}\r\n        {/*<directionalLight />*/}\r\n        <directionalLight position={[6,3,0]}\r\n        castShadow\r\n        shadow-mapSize-height={2**10}\r\n        shadow-mapSize-width={2**10}\r\n        shadow-radius={10}\r\n        intensity={2}/>\r\n\r\n    <Bulb position={[-6, 3, 0]} />{/**/}\r\n    <Bulb position={[0, 3, 0]} />\r\n    <Bulb position={[6, 3, 0]} />\r\n\r\n</>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default Lights","import { EffectComposer, DepthOfField, Bloom, Noise, Vignette,  GodRays } from '@react-three/postprocessing'\r\nimport {useThree} from '@react-three/fiber'\r\nimport React, {useEffect, useState} from 'react';\r\n\r\nconst Effects =()=>{\r\n\r\n\r\n\r\n    const {scene} = useThree()\r\n    const [lights, setLights] = useState(null)\r\n    console.log(scene.lights)\r\n\r\n    useEffect(()=>{\r\n      if (scene.lights && scene.lights.length === 3) setLights(scene.lights)\r\n    },[scene.lights])/**/\r\n    \r\n\r\n    return(\r\n      lights ?//\r\n      <EffectComposer>\r\n        <DepthOfField focusDistance={0} focalLength={0.02} bokehScale={2} height={480} />\r\n        \r\n        {scene.lights.map((light,index) =>\r\n          \r\n         \r\n          <GodRays\r\n\r\n          key={light.current.uuid}\r\n          /*key={scene.lights.current.uuid}*/\r\n          sun={light.current}\r\n\r\n\r\n          /****My own testing  */\r\n          /*\r\n          key={index}\r\n          \r\n          */\r\n          />\r\n          \r\n        )}\r\n        \r\n      </EffectComposer>\r\n      :null//\r\n    )\r\n}\r\n\r\nexport default Effects","\n/****I recommend transferring all of the imports from the first file containing all of the components to the each and every new component files made there after  */\nimport './App.css';\nimport React, {useRef, Suspense, useState } from 'react';\nimport {Canvas, useFrame, useThree, extend, useLoader} from '@react-three/fiber';\nimport * as THREE from \"three\";\nimport {TextureLoader} from 'three/src/loaders/TextureLoader'\n//import { DirectionalLightHelper } from \"three\";\n//import {useHelper} from \"@react-three/drei\";\nimport Orbit from './Orbit';\nimport Floor from './Floor';\nimport Bulb from './Bulb';\nimport Box from './Box';\nimport Background from './Background';\nimport ColorSelector from './ColorSelector';\nimport Dragable from './Dragable';\nimport {Physics} from '@react-three/cannon'\nimport Model from './Model';\nimport BoundingBox from './BoundingBox';\nimport Cars from './Cars';\nimport CameraControls from './CameraControls';\nimport CameraButtons from './CameraButtons';\nimport Lights from './Lights';\nimport Effects from './Effects';\n\n//const [cubeTexture] = useLoader(TextureLoader,['wood.jpg']) Remember react hooks cannot be used at the top level. But the ideas is that you would destructure to obtain multiple textures at once if you wanted\n\nconst App = ()=>{\n  /*const dlref = useRef()\n  useHelper(dlref,DirectionalLightHelper,1)*/\n\n  const [active, setActive] = useState(false);\n\n \n\n  //const [] =useSate([])\n\n  /*const onPointerUpHandler = (e)=>{\n \n    console.log(e)\n    console.log(`down`)\n   \n    setActive(!active)\n  \n  }*/\n  \n  return (\n    <div style={{ height: '100vh', width: '100vw' }}>\n\n      <ColorSelector />{/**/}\n      \n      <CameraButtons/>\n      \n      {/***You got shadows to work by upgrading your package from the deprecated version*/}\n      <Canvas style={{ backgroundColor: 'black' }} \n      camera={{ position: [7, 7, 7] }} \n      shadows /*Boolean attribute by default sets to true. My theory is that it sets it after you */\n      gl={{\n        powerPreference: \"high-performance\",\n        antialias: false,\n        stencil: false,\n        depth: false\n      }}/**/\n      \n      \n      >\n        <axesHelper arg={[5]} />\n        {/*Don't forget to added physics please, it is important step for use-cannon*/}\n        <Physics>\n          \n          <Cars/>\n\n          <Floor position={[0, -0.5, 0]} /> {/**/}\n\n          \n        </Physics>\n\n        <Lights/>\n\n        <Suspense fallback={null}>\n            <Background />{/**/}\n          </Suspense>\n        \n        <CameraControls/>\n\n        <Orbit />{/**/}\n        <Effects/>\n       \n      </Canvas>\n\n    </div>\n\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}